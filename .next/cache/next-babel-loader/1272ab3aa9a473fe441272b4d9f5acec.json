{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\daniphp\\\\nextjs\\\\turismo_app\\\\components\\\\FilterSearch.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport AlgoliaPlaces from 'algolia-places-react';\nexport const FilterWrapper = styled.div.withConfig({\n  displayName: \"FilterSearch__FilterWrapper\",\n  componentId: \"m9cy7w-0\"\n})([\"width:100%;height:45vh;padding:10px;background:purple;border-radius:5px;display:flex;flex-direction:column;justify-content:space-around;grid-row-gap:4vh;\"]);\nexport const Options = styled.div.withConfig({\n  displayName: \"FilterSearch__Options\",\n  componentId: \"m9cy7w-1\"\n})([\"width:20vw;display:flex;justify-content:space-around;\"]);\nexport const Filters = styled.div.withConfig({\n  displayName: \"FilterSearch__Filters\",\n  componentId: \"m9cy7w-2\"\n})([\"display:flex;width:60vw;justify-content:space-around;\"]);\nexport const Aoptions = styled.a.withConfig({\n  displayName: \"FilterSearch__Aoptions\",\n  componentId: \"m9cy7w-3\"\n})([\"color:white;background:#333;padding:5px;border-radius:5px;\"]);\nexport const InputFrom = styled.input.withConfig({\n  displayName: \"FilterSearch__InputFrom\",\n  componentId: \"m9cy7w-4\"\n})([\"\"]);\nexport const InputTo = styled.input.withConfig({\n  displayName: \"FilterSearch__InputTo\",\n  componentId: \"m9cy7w-5\"\n})([\"\"]);\n\nconst FilterSearch = () => {\n  var placesAutocomplete = places({\n    appId: 'YOUR_PLACES_APP_ID',\n    apiKey: 'YOUR_PLACES_API_KEY',\n    container: document.querySelector('#address-input')\n  });\n  return __jsx(React.Fragment, null, __jsx(FilterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(Aoptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \" Viaje + Alojamiento\"), __jsx(Aoptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \" Viaje + 2 Alojamientos\"), __jsx(Aoptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \" Viaje + Auto\")), __jsx(Filters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(InputFrom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), __jsx(InputTo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), __jsx(InputTo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), __jsx(InputTo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), __jsx(AlgoliaPlaces, {\n    placeholder: \"Write an address here\",\n    options: {\n      appId: 'pl992MAS3B1L',\n      apiKey: 'd964608a03f900dc27a963d7c3953c47',\n      language: 'en',\n      countries: ['se'],\n      type: 'city' // Other options from https://community.algolia.com/places/documentation.html#options\n\n    },\n    onChange: ({\n      query,\n      rawAnswer,\n      suggestion,\n      suggestionIndex\n    }) => console.log('Fired when suggestion selected in the dropdown or hint was validated.'),\n    onSuggestions: ({\n      rawAnswer,\n      query,\n      suggestions\n    }) => console.log(rawAnswer, query, suggestions, 'Algolia'),\n    onCursorChanged: ({\n      rawAnswer,\n      query,\n      suggestion,\n      suggestonIndex\n    }) => console.log('Fired when arrows keys are used to navigate suggestions.'),\n    onClear: () => console.log('Fired when the input is cleared.'),\n    onLimit: ({\n      message\n    }) => console.log('Fired when you reached your current rate limit.'),\n    onError: ({\n      message\n    }) => console.log('Fired when we could not make the request to Algolia Places servers for any reason but reaching your rate limit.'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default FilterSearch;","map":{"version":3,"sources":["C:/xampp/htdocs/daniphp/nextjs/turismo_app/components/FilterSearch.js"],"names":["useState","useEffect","useRef","styled","AlgoliaPlaces","FilterWrapper","div","Options","Filters","Aoptions","a","InputFrom","input","InputTo","FilterSearch","placesAutocomplete","places","appId","apiKey","container","document","querySelector","language","countries","type","query","rawAnswer","suggestion","suggestionIndex","console","log","suggestions","suggestonIndex","message"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAGA,OAAO,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,iKAAnB;AAYP,OAAO,MAAMC,OAAO,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,6DAAb;AAKP,OAAO,MAAME,OAAO,GAAGL,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,6DAAb;AAKP,OAAO,MAAMG,QAAQ,GAAGN,MAAM,CAACO,CAAV;AAAA;AAAA;AAAA,kEAAd;AAOP,OAAO,MAAMC,SAAS,GAAGR,MAAM,CAACS,KAAV;AAAA;AAAA;AAAA,QAAf;AAGP,OAAO,MAAMC,OAAO,GAAGV,MAAM,CAACS,KAAV;AAAA;AAAA;AAAA,QAAb;;AAIP,MAAME,YAAY,GAAG,MAAO;AAExB,MAAIC,kBAAkB,GAAGC,MAAM,CAAC;AAC5BC,IAAAA,KAAK,EAAE,oBADqB;AAE5BC,IAAAA,MAAM,EAAE,qBAFoB;AAG5BC,IAAAA,SAAS,EAAEC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB;AAHiB,GAAD,CAA/B;AAMA,SACI,4BACA,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,EAMI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CANJ,EAYI,MAAC,aAAD;AACA,IAAA,WAAW,EAAC,uBADZ;AAGA,IAAA,OAAO,EAAE;AACLJ,MAAAA,KAAK,EAAE,cADF;AAELC,MAAAA,MAAM,EAAE,kCAFH;AAGLI,MAAAA,QAAQ,EAAE,IAHL;AAILC,MAAAA,SAAS,EAAE,CAAC,IAAD,CAJN;AAKLC,MAAAA,IAAI,EAAE,MALD,CAML;;AANK,KAHT;AAYA,IAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,UAApB;AAAgCC,MAAAA;AAAhC,KAAD,KACNC,OAAO,CAACC,GAAR,CAAY,uEAAZ,CAbJ;AAeA,IAAA,aAAa,EAAE,CAAC;AAAEJ,MAAAA,SAAF;AAAaD,MAAAA,KAAb;AAAoBM,MAAAA;AAApB,KAAD,KACXF,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBD,KAAvB,EAA8BM,WAA9B,EAA2C,SAA3C,CAhBJ;AAkBA,IAAA,eAAe,EAAE,CAAC;AAAEL,MAAAA,SAAF;AAAaD,MAAAA,KAAb;AAAoBE,MAAAA,UAApB;AAAgCK,MAAAA;AAAhC,KAAD,KACbH,OAAO,CAACC,GAAR,CAAY,0DAAZ,CAnBJ;AAqBA,IAAA,OAAO,EAAE,MACLD,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAtBJ;AAwBA,IAAA,OAAO,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACLJ,OAAO,CAACC,GAAR,CAAY,iDAAZ,CAzBJ;AA2BA,IAAA,OAAO,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACLJ,OAAO,CAACC,GAAR,CAAY,iHAAZ,CA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADA,CADJ;AA+CH,CAvDD;;AAwDA,eAAehB,YAAf","sourcesContent":["import {useState, useEffect, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport AlgoliaPlaces from 'algolia-places-react';\r\n\r\n\r\nexport const FilterWrapper = styled.div`\r\nwidth:100%;\r\nheight:45vh;\r\npadding: 10px;\r\nbackground:purple;\r\nborder-radius:5px;\r\ndisplay:flex;\r\nflex-direction: column;\r\njustify-content:space-around;\r\ngrid-row-gap:4vh;\r\n`;\r\n\r\nexport const Options = styled.div`\r\nwidth:20vw;\r\ndisplay:flex;\r\njustify-content:space-around;\r\n`;\r\nexport const Filters = styled.div`\r\ndisplay:flex;\r\nwidth:60vw;\r\njustify-content:space-around;\r\n`;\r\nexport const Aoptions = styled.a`\r\ncolor: white;\r\nbackground: #333;\r\npadding:5px;\r\nborder-radius:5px;\r\n\r\n`;\r\nexport const InputFrom = styled.input`\r\n  \r\n`;\r\nexport const InputTo = styled.input`\r\n  \r\n`;\r\n\r\nconst FilterSearch = ( ) => {\r\n\r\n    var placesAutocomplete = places({\r\n        appId: 'YOUR_PLACES_APP_ID',\r\n        apiKey: 'YOUR_PLACES_API_KEY',\r\n        container: document.querySelector('#address-input')\r\n      });\r\n\r\n    return(\r\n        <>\r\n        <FilterWrapper>\r\n            <Options>\r\n                <Aoptions> Viaje + Alojamiento</Aoptions>\r\n                <Aoptions> Viaje + 2 Alojamientos</Aoptions>\r\n                <Aoptions> Viaje + Auto</Aoptions>\r\n            </Options>\r\n            <Filters>\r\n                <InputFrom />\r\n                <InputTo/>\r\n                <InputTo/>\r\n                <InputTo/>\r\n            </Filters>\r\n            <AlgoliaPlaces\r\n            placeholder='Write an address here'\r\n        \r\n            options={{\r\n                appId: 'pl992MAS3B1L',\r\n                apiKey: 'd964608a03f900dc27a963d7c3953c47',\r\n                language: 'en',\r\n                countries: ['se'],\r\n                type: 'city',\r\n                // Other options from https://community.algolia.com/places/documentation.html#options\r\n            }}\r\n        \r\n            onChange={({ query, rawAnswer, suggestion, suggestionIndex }) => \r\n                console.log('Fired when suggestion selected in the dropdown or hint was validated.')}\r\n        \r\n            onSuggestions={({ rawAnswer, query, suggestions }) => \r\n                console.log(rawAnswer, query, suggestions, 'Algolia')}\r\n        \r\n            onCursorChanged={({ rawAnswer, query, suggestion, suggestonIndex }) => \r\n                console.log('Fired when arrows keys are used to navigate suggestions.')}\r\n        \r\n            onClear={() => \r\n                console.log('Fired when the input is cleared.')}\r\n        \r\n            onLimit={({ message }) => \r\n                console.log('Fired when you reached your current rate limit.')}\r\n        \r\n            onError={({ message }) => \r\n                console.log('Fired when we could not make the request to Algolia Places servers for any reason but reaching your rate limit.')}\r\n            />\r\n        </FilterWrapper>\r\n        </>\r\n    )\r\n}\r\nexport default FilterSearch"]},"metadata":{},"sourceType":"module"}